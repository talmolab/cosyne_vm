name: Build and Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build lablink-client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --editable .[dev]

      - name: Build package
        run: |
          python -m build
          twine check dist/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lablink-client-dist
          path: dist/
          retention-days: 1

  tests:
    name: Test lablink-client
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: "Authenticate to Google Cloud"
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          project_id: "vmassign-dev"
          workload_identity_provider: "projects/446967198037/locations/global/workloadIdentityPools/github-actions/providers/my-repo"

      - name: Create a Temporary Service Account
        run: |
          gcloud iam service-accounts create "github-actions-testing" \
            --description="Temporary Service Account for GitHub Actions" \
            --display-name="GitHub Actions Service Account"

      - name: Grant the Service Account the necessary permissions
        run: |
          gcloud iam service-accounts add-iam-policy-binding github-actions-testing@vmassign-dev.iam.gserviceaccount.com \
            --member="principalSet://iam.googleapis.com/projects/446967198037/locations/global/workloadIdentityPools/github-actions/attribute.repository/talmolab/cosyne_vm" \
            --role="roles/iam.workloadIdentityUser"

          gcloud iam service-accounts add-iam-policy-binding github-actions-testing@vmassign-dev.iam.gserviceaccount.com \
            --member="principalSet://iam.googleapis.com/projects/446967198037/locations/global/workforcePools/github-actions/attribute.repository/talmolab/cosyne_vm" \
            --role="roles/iam.serviceAccountTokenCreator"


          gcloud projects add-iam-policy-binding vmassign-dev \
            --member="serviceAccount:github-actions-testing@vmassign-dev.iam.gserviceaccount.com" \
            --role="roles/spanner.admin"

          gcloud projects add-iam-policy-binding vmassign-dev \
            --member="serviceAccount:github-actions-testing@vmassign-dev.iam.gserviceaccount.com" \
            --role="roles/iam.serviceAccountTokenCreator"

          gcloud projects add-iam-policy-binding vmassign-dev \
            --member="serviceAccount:github-actions-testing@vmassign-dev.iam.gserviceaccount.com" \
            --role="roles/iam.serviceAccountAdmin"

      - name: "Activate Service Account"
        id: auth-temp-sa
        uses: google-github-actions/auth@v2
        with:
          project_id: "vmassign-dev"
          workload_identity_provider: "projects/446967198037/locations/global/workloadIdentityPools/github-actions/providers/my-repo"
          service_account: "github-actions-testing@vmassign-dev.iam.gserviceaccount.com"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.4

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        run: |
          terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform Plan
        run: |
          terraform plan -no-color
        working-directory: ./terraform

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -no-color
        working-directory: ./terraform

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Change Directory to Project Root
        run: |
          cd ../

      - name: Debug Current Directory
        run: |
          pwd

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: lablink-client-dist
          path: dist/

      - name: List files
        run: |
          ls dist/

      - name: Install package from artifact
        run: |
          WHL=$(ls dist/*.whl)
          pip install "$WHL[dev]"

      - name: Print installed packages
        run: |
          pip list

      - name: Run tests
        run: |
          pytest tests/

      - name: Clean up Terraform resources
        if: always()
        run: |
          terraform plan -destroy -no-color
          terraform destroy -auto-approve -no-color
        working-directory: ./terraform

      - name: Clean up Service Account
        if: always()
        run: |
          gcloud iam service-accounts delete "github-actions-testing@vmassign-dev.iam.gserviceaccount.com" --quiet
